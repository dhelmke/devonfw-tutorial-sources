:toc: macro
toc::[]

= An OASP4Js Application

== My Thai Star basics
As an example of how an OASP4J application is built we are going to show the _My Thai Star_ application frontend project, that can be found https://github.com/devonfw/my-thai-star[in github].

_My Thai Star_ application is a solution for managing the online booking and orders of a restaurant, it is addressed as a showcase app but designed with real requirements and, moreover, trying to serve as an example of common use cases in web apps (Routing with and without guards, use of flex-box, theming, re-usable components, mock back end...).

image::images/mythaistar/mts.png[, link="images/mythaistar/mts.png"]

The main features of the app are:

- Anonymous users can:
* Book a table.
* Create an event and invite some friends to it via email.
* See the menu of dishes and with the reservationId make their own orders.

- Logged users also can:
* If the user has the role _waiter_, he will be able to access to a restricted area to see and filter the list and details of all the reservations and orders made by the users.

== My Thai Star Oasp4j Frontend overview

What we have shown in the previous section is the aspect of a My Thai Star client app that consumes the services created with the _Oasp4j_ server solution.

From now on we are going to focus on the implementation of the components, services and directives to show how is it formed and how you can create your own _Oasp4js_ client project with Devon framework.

My Thai Star project is hosted https://github.com/devonfw/my-thai-star[on github] and includes different technologies such as _Java_, _.Net_ and _Node_ for backend solutions and _Angular_ and _Xamarin_ as default clients.

=== The Oasp4js project

Using the _Oasp4js_ approach for the client project we will have a structure of a main _Angular_ project formed as follows:

image::images/oasp4js/2.Example_app/project_main_files.JPG[, link="images/oasp4js/2.Example_app/project_main_files.JPG"]

In the _node modules_ folder, all installed dependencies will be stored.

In the _e2e_ folder will be all end-to-end tests.

The _src_ folder contains all the application code.

finally, the rest of the files are config files for the different technologies involved in the project.