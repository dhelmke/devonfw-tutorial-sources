:toc: macro
toc::[]

= devonfw introduction

image::images/devon/devonfw.png[,width="250", link="images/devon/devonfw.png"]

http://www.devonfw.com/[devonfw] is a development platform aiming for standardization of processes and productivity boost, that provides an architecture blueprint for Java/JavaScript applications, alongside a set of tools to provide a fully functional _out-of-the-box_ development environment.

You don't need to click any links here. You can come back later if you like, but everything will be explained step by step later on.

== everything in a zip file

The devonfw distributions can be obtained from the http://de-mucevolve02/files/devonfw/current/[Releases Site] and are packaged in a _zip_ file that includes all the needed tools, software and configurations.

== no need of installation, nor configuration

Having all the dependencies serf-contained in the distribution's _zip_ file, users don't need to install or configure anything. Just extracting the _zip_ content is enough to have a fully functional _devonfw_.

== pre installed software

The list of software pre-installed with devonfw distributions is:

- _Eclipse_: pre-configured and fully functional IDE to develop Java based apps.

- _Java_: all the Java environment configured and ready to be used within the distribution.

- _Maven_: to manage project dependencies.

- _Node_: a Node js environment configured and ready to be used within the distribution.

- _Sencha_: devonfw also includes a installation of the _Sencha Cmd_ tool.

- _Sonarqube_: a code quality tool.

- _Tomcat_: a web server ready to test the deploy of our artifacts.

== server solutions

For backend solutions _devonfw_ provides the https://github.com/devonfw/devon4j[_devon4j_] platform as main implementation. With _devon4j_, users will find a standardized architecture blueprint for a Java applications based on _Spring_, and a set of best-of-breed technologies alongside a compendium of best practices and code conventions to build solid and reliable web applications.

With _devonfw_/_devon4j_ developers have at their disposal an archetype to generate new server projects with all _devon4j_ modules and pre-configurations ready to start to develop applications in a fully functional environment. 

== client solutions

For client applications _devonfw_ includes two possible solutions, both based on _JavaScript_:

- https://github.com/devonfw/devon4ng[devon4ng]: the _devonfw_ implementation based on https://angular.io/[Angular] framework.

// - https://github.com/devonfw/devon4sencha[devon4sencha]: a client solution based on the https://www.sencha.com/[Sencha] framework.

== custom tools

=== Devcon

For project management and other life-cycle related tasks, _devonfw_ provides also https://github.com/devonfw/devcon[Devcon], a command line and graphic user interface cross platform tool.

With _Devcon_ users can automate the creation of new projects (both server and client), build and run those and even, for server projects, deploy locally on Tomcat.

image::images/devon/devcon.png[,width="450", link="images/devon/devcon.png"]

All those tasks can be done manually using _Maven_, _Tomcat_, _Sencha Cmd_, _Bower_, _Gulp_, etc. but with _Devcon_ users have the possibility of managing the projects without the necessity of dealing with all those different tools.

=== Cobigen

_Cobigen_ is a code generator included in the context of _devonfw_ that allows users to generate all the structure and code of the components, helping to save a lot of time waisted in repetitive tasks.

image::images/devon/cobigen.png[,width="450", link="images/devon/cobigen.png"]

== ip modules

As part of the goal of productivity boosting, _devonfw_ provides also to developers a set of _modules_, created from real projects requirements, that can be connected to projects saving all the work of a new implementation.

The current available modules are:

- _async_: module to manage asynchronous web calls in a _Spring_ based server app.

- _i18n_: module for internationalization.

- _integration_: implementation of https://projects.spring.io/spring-integration/[_Spring Integration_].

- _microservices_: a set of archetypes to create a complete microservices infrastructure based on https://cloud.spring.io/spring-cloud-netflix/[_Spring Cloud_Netflix].

- _reporting_: a module to create reports based on http://community.jaspersoft.com/project/jasperreports-library[_Jasper Reports_] library.

- _winauth active directory_: a module to authenticate users against an _Active Directory_.

- _winauth single sign on_: module that allows applications to authenticate the users by the Windows credentials.

'''

*Next chapter*: link:devonfw-ide-setup[devonfw-ide-setup]