:toc: macro
toc::[]

== Angular Services
In this chapter we are going to see how services work and how we can work with them.

== What are Angular Services
From https://angular.io/[Angular's main page]:

_"Service is a broad category encompassing any value, function, or feature that your application needs._

_Almost anything can be a service. A service is typically a class with a narrow, well-defined purpose. It should do something specific and do it well._

_There is nothing specifically Angular about services. Angular has no definition of a service. There is no service base class, and no place to register a service._

_Yet services are fundamental to any Angular application. Components are big consumers of services."_

Services are often created in a shared folder, with the purpose of containing all the logic regarding a component or a complex type of operation. As an example, in the case of MyThaiStar, all the components which call to the server or have methods with more complex logic have their own service to implement them, but also there are services which instead of being related to just one component, they are needed several times trough the code in many components, like the price-calculator.

Like components, services have to be declared in a NgModule too, in this case, in the _providers_ array.

== Dependency Injection

From https://angular.io/guide/architecture#dependency-injection[ Angular architecture docs]:

_"Dependency injection is a way to supply a new instance of a class with the fully-formed dependencies it requires. Most dependencies are services. Angular uses dependency injection to provide new components with the services they need._

_When Angular creates a component, it first asks an injector for the services that the component requires._

image::images/oasp4js/5.Angular_Services/injector.png[, link="images/oasp4js/5.Angular_Services/injector.png"]

_An injector maintains a container of service instances that it has previously created. If a requested service instance is not in the container, the injector makes one and adds it to the container before returning the service to Angular. When all requested services have been resolved and returned, Angular can call the component's constructor with those services as arguments. This is dependency injection."_

For more information: https://angular.io/guide/dependency-injection[Angular DI]

== Create a new service

Security or other global services will be stored in a shared folder at the same level of the rest of the components, but the services that are specific of a certain component will be in a shared folder too, but inside of that certain component. We can indicate the path to create our services when creating them using angular/cli

== Authentication